
AOSKIT_FRAMEWORK[sdk=macosx*] = -weak_framework AOSAccounts -weak_framework AOSAccountsLite
APPLE_AKS_LIBRARY[sdk=macosx*] = -L$(SDKROOT)/usr/local/lib -laks -framework MobileKeyBag
APPLE_AKS_LIBRARY[sdk=iphoneos*] = -L$(SDKROOT)/usr/local/lib -laks -framework MobileKeyBag
APPLE_AKS_LIBRARY[sdk=watchos*] = -L$(SDKROOT)/usr/local/lib -laks -framework MobileKeyBag
APPLE_AKS_LIBRARY[sdk=appletvos*] = -L$(SDKROOT)/usr/local/lib -laks -framework MobileKeyBag

OTHER_LDFLAGS_AGGREGATEDICTIONARY[sdk=embedded] = -framework AggregateDictionary
OTHER_LDFLAGS_APPLESYSTEMINFO[sdk=macos*] = -framework AppleSystemInfo
OTHER_LDFLAGS_DIAGNOSTICSMESSAGESCLIENT[sdk=macosx*] = -lDiagnosticMessagesClient
OTHER_LDFLAGS_LIBCMS[sdk=embedded*] = -lCMS
OTHER_LDFLAGS_MOBILEGESTALT[sdk=embedded*] = -lMobileGestalt

OTHER_LDFLAGS_CRASHREPORTER[sdk=embedded] = -framework CrashReporterSupport
OTHER_LDFLAGS_CRASHREPORTER[sdk=macos*] = -framework CrashReporterSupport

OTHER_CODE_SIGN_FLAGS_LIBRARY_VALIDATION = -o library
OTHER_CODE_SIGN_FLAGS_LIBRARY_VALIDATION[sdk=*simulator*] =

//
// Play games to avoid issues with bridge trains
//
BRIDGE_YES = YES
BRIDGE_ = NO
BRIDGE_NO = NO
BRIDGE = $(BRIDGE_$(RC_BRIDGE))

OTHER_LDFLAGS_APS_BRIDGE_NO = -framework ApplePushService
OTHER_LDFLAGS_APS_BRIDGE_YES =
OTHER_LDFLAGS_APS = $(OTHER_LDFLAGS_APS_BRIDGE_$(BRIDGE))

OTHER_LDFLAGS_CLOUDKIT_BRIDGE_NO = -framework CloudKit
OTHER_LDFLAGS_CLOUDKIT_BRIDGE_YES =
OTHER_LDFLAGS_CLOUDKIT = $(OTHER_LDFLAGS_CLOUDKIT_BRIDGE_$(BRIDGE))

OTHER_LDFLAGS_PREQUELITE_BRIDGE_NO = -l prequelite
OTHER_LDFLAGS_PREQUELITE_BRIDGE_YES =
OTHER_LDFLAGS_PREQUELITE = $(OTHER_LDFLAGS_PREQUELITE_BRIDGE_$(BRIDGE))

OTHER_LDFLAGS_ACCOUNTS_BRIDGE_NO = -framework Accounts
OTHER_LDFLAGS_ACCOUNTS_BRIDGE_YES =
OTHER_LDFLAGS_ACCOUNTS = $(OTHER_LDFLAGS_ACCOUNTS_BRIDGE_$(BRIDGE))

OTHER_LDFLAGS_APPLEACCOUNT_IOS_NO = -framework AppleAccount
OTHER_LDFLAGS_APPLEACCOUNT_IOS_YES =

OTHER_LDFLAGS_APPLEACCOUNT[sdk=iphoneos*] = $(OTHER_LDFLAGS_APPLEACCOUNT_IOS_$(BRIDGE))
OTHER_LDFLAGS_APPLEACCOUNT[sdk=iphonesimulator*] = $(OTHER_LDFLAGS_APPLEACCOUNT_IOS_$(BRIDGE))
OTHER_LDFLAGS_APPLEACCOUNT[sdk=appletv*] = $(OTHER_LDFLAGS_APPLEACCOUNT_IOS_$(BRIDGE))
OTHER_LDFLAGS_APPLEACCOUNT[sdk=watchos*] = $(OTHER_LDFLAGS_APPLEACCOUNT_IOS_$(BRIDGE))

// The bridge appears to support protocol buffers.
OTHER_LDFLAGS_PROTOBUF = -framework ProtocolBuffer

OTHER_LDFLAGS_SHAREDWEBCREDENTIALS_IOS_NO = -framework SharedWebCredentials
OTHER_LDFLAGS_SHAREDWEBCREDENTIALS_IOS_YES =
OTHER_LDFLAGS_SHAREDWEBCREDENTIALS[sdk=iphoneos*] = $(OTHER_LDFLAGS_SHAREDWEBCREDENTIALS_IOS_$(BRIDGE))
OTHER_LDFLAGS_SHAREDWEBCREDENTIALS[sdk=watchos*] =
OTHER_LDFLAGS_SHAREDWEBCREDENTIALS[sdk=appletvos*] =

//OTHER_LDFLAGS_APPLEIDAUTHSUPPORT_BRIDGE_NO = -Wl,-upward_framework,AppleIDAuthSupport
OTHER_LDFLAGS_APPLEIDAUTHSUPPORT_BRIDGE_NO =
OTHER_LDFLAGS_APPLEIDAUTHSUPPORT_BRIDGE_YES =
OTHER_LDFLAGS_APPLEIDAUTHSUPPORT = $(OTHER_LDFLAGS_APPLEIDAUTHSUPPORT_BRIDGE_$(BRIDGE))

OTHER_LDFLAGS_WIRELESSDIAGNOSTICS_BRIDGE_NO = -framework WirelessDiagnostics
OTHER_LDFLAGS_WIRELESSDIAGNOSTICS_BRIDGE_YES =
OTHER_LDFLAGS_WIRELESSDIAGNOSTICS = $(OTHER_LDFLAGS_WIRELESSDIAGNOSTICS_BRIDGE_$(BRIDGE))

OTHER_LDFLAGS_MOBILEASSET_BRIDGE_NO = -framework MobileAsset
OTHER_LDFLAGS_MOBILEASSET_BRIDGE_YES =
OTHER_LDFLAGS_MOBILEASSET = $(OTHER_LDFLAGS_MOBILEASSET_BRIDGE_$(BRIDGE))

OTHER_LDFLAGS_SECURITYFOUNDATION_BRIDGE_NO = -framework SecurityFoundation
OTHER_LDFLAGS_SECURITYFOUNDATION_BRIDGE_YES =
OTHER_LDFLAGS_SECURITYFOUNDATION = $(OTHER_LDFLAGS_SECURITYFOUNDATION_BRIDGE_$(BRIDGE))

// Breaks the BaseSystem: fixing in <rdar://problem/36166435> Re-enable IMCore autosysdiagnose capture to securityd
//OTHER_LDFLAGS_IMCORE_BRIDGE_NO = -framework IMCore
//OTHER_LDFLAGS_IMCORE_BRIDGE_YES =
OTHER_LDFLAGS_IMCORE = $(OTHER_LDFLAGS_IMCORE_BRIDGE_$(BRIDGE))
OTHER_LDFLAGS_IMCORE[sdk=appletv*] =
