//   NOTE: this is a machine generated file--editing not recommended
//
// sm_x501ud.h - class definitions for ASN.1 module UsefulDefinitions
//
//   This file was generated by snacc on Wed Jun 27 16:40:55 2001
//   UBC snacc by Mike Sample
//   A couple of enhancements made by IBM European Networking Center

#ifndef _sm_x501ud_h_
#define _sm_x501ud_h_


//------------------------------------------------------------------------------
// class declarations:


//------------------------------------------------------------------------------
// class definitions:

//------------------------------------------------------------------------------
// externs for value defs

#define ds_arc 2, 5
#define ds     AsnOid(ds_arc)
#define module_arc 2, 5, 1
#define module     AsnOid(module_arc)
#define serviceElement_arc 2, 5, 2
#define serviceElement     AsnOid(serviceElement_arc)
#define applicationContext_arc 2, 5, 3
#define applicationContext     AsnOid(applicationContext_arc)
#define attributeType_arc 2, 5, 4
#define attributeType     AsnOid(attributeType_arc)
#define attributeSyntax_arc 2, 5, 5
#define attributeSyntax     AsnOid(attributeSyntax_arc)
#define objectClass_arc 2, 5, 6
#define objectClass     AsnOid(objectClass_arc)
#define dsAlgorithm_arc 2, 5, 8
#define dsAlgorithm     AsnOid(dsAlgorithm_arc)
#define abstractSyntax_arc 2, 5, 9
#define abstractSyntax     AsnOid(abstractSyntax_arc)
#define dsaOperationalAttribute_arc 2, 5, 12
#define dsaOperationalAttribute     AsnOid(dsaOperationalAttribute_arc)
#define matchingRule_arc 2, 5, 13
#define matchingRule     AsnOid(matchingRule_arc)
#define knowledgeMatchingRule_arc 2, 5, 14
#define knowledgeMatchingRule     AsnOid(knowledgeMatchingRule_arc)
#define nameForm_arc 2, 5, 15
#define nameForm     AsnOid(nameForm_arc)
#define group_arc 2, 5, 16
#define group     AsnOid(group_arc)
#define subentry_arc 2, 5, 17
#define subentry     AsnOid(subentry_arc)
#define operationalAttributeType_arc 2, 5, 18
#define operationalAttributeType     AsnOid(operationalAttributeType_arc)
#define operationalBinding_arc 2, 5, 19
#define operationalBinding     AsnOid(operationalBinding_arc)
#define schemaObjectClass_arc 2, 5, 20
#define schemaObjectClass     AsnOid(schemaObjectClass_arc)
#define schemaOperationalAttribute_arc 2, 5, 21
#define schemaOperationalAttribute     AsnOid(schemaOperationalAttribute_arc)
#define administrativeRoles_arc 2, 5, 23
#define administrativeRoles     AsnOid(administrativeRoles_arc)
#define accessControlAttribute_arc 2, 5, 24
#define accessControlAttribute     AsnOid(accessControlAttribute_arc)
#define rosObject_arc 2, 5, 25
#define rosObject     AsnOid(rosObject_arc)
#define contract_arc 2, 5, 26
#define contract     AsnOid(contract_arc)
#define package_arc 2, 5, 27
#define package     AsnOid(package_arc)
#define accessControlSchemes_arc 2, 5, 28
#define accessControlSchemes     AsnOid(accessControlSchemes_arc)
#define certificateExtension_arc 2, 5, 29
#define certificateExtension     AsnOid(certificateExtension_arc)
#define managementObject_arc 2, 5, 30
#define managementObject     AsnOid(managementObject_arc)
#define informationFramework_arc 2, 5, 1, 1, 3
#define informationFramework     AsnOid(informationFramework_arc)
#define directoryAbstractService_arc 2, 5, 1, 2, 3
#define directoryAbstractService     AsnOid(directoryAbstractService_arc)
#define distributedOperations_arc 2, 5, 1, 3, 3
#define distributedOperations     AsnOid(distributedOperations_arc)
#define protocolObjectIdentifiers_arc 2, 5, 1, 4, 3
#define protocolObjectIdentifiers     AsnOid(protocolObjectIdentifiers_arc)
#define selectedAttributeTypes_arc 2, 5, 1, 5, 3
#define selectedAttributeTypes     AsnOid(selectedAttributeTypes_arc)
#define selectedObjectClasses_arc 2, 5, 1, 6, 3
#define selectedObjectClasses     AsnOid(selectedObjectClasses_arc)
#define authenticationFramework_arc 2, 5, 1, 7, 3
#define authenticationFramework     AsnOid(authenticationFramework_arc)
#define algorithmObjectIdentifiers_arc 2, 5, 1, 8, 3
#define algorithmObjectIdentifiers     AsnOid(algorithmObjectIdentifiers_arc)
#define directoryObjectIdentifiers_arc 2, 5, 1, 9, 3
#define directoryObjectIdentifiers     AsnOid(directoryObjectIdentifiers_arc)
#define upperBounds_arc 2, 5, 1, 10, 3
#define upperBounds     AsnOid(upperBounds_arc)
#define dap_arc 2, 5, 1, 11, 3
#define dap     AsnOid(dap_arc)
#define dsp_arc 2, 5, 1, 12, 3
#define dsp     AsnOid(dsp_arc)
#define distributedDirectoryOIDs_arc 2, 5, 1, 13, 3
#define distributedDirectoryOIDs     AsnOid(distributedDirectoryOIDs_arc)
#define directoryShadowOIDs_arc 2, 5, 1, 14, 3
#define directoryShadowOIDs     AsnOid(directoryShadowOIDs_arc)
#define directoryShadowAbstractService_arc 2, 5, 1, 15, 3
#define directoryShadowAbstractService     AsnOid(directoryShadowAbstractService_arc)
#define disp_arc 2, 5, 1, 16, 3
#define disp     AsnOid(disp_arc)
#define dop_arc 2, 5, 1, 17, 3
#define dop     AsnOid(dop_arc)
#define opBindingManagement_arc 2, 5, 1, 18, 3
#define opBindingManagement     AsnOid(opBindingManagement_arc)
#define opBindingOIDs_arc 2, 5, 1, 19, 3
#define opBindingOIDs     AsnOid(opBindingOIDs_arc)
#define hierarchicalOperationalBindings_arc 2, 5, 1, 20, 3
#define hierarchicalOperationalBindings     AsnOid(hierarchicalOperationalBindings_arc)
#define dsaOperationalAttributeTypes_arc 2, 5, 1, 22, 3
#define dsaOperationalAttributeTypes     AsnOid(dsaOperationalAttributeTypes_arc)
#define schemaAdministration_arc 2, 5, 1, 23, 3
#define schemaAdministration     AsnOid(schemaAdministration_arc)
#define basicAccessControl_arc 2, 5, 1, 24, 3
#define basicAccessControl     AsnOid(basicAccessControl_arc)
#define directoryOperationalBindingTypes_arc 2, 5, 1, 25, 3
#define directoryOperationalBindingTypes     AsnOid(directoryOperationalBindingTypes_arc)
#define certificateExtensions_arc 2, 5, 1, 26, 0
#define certificateExtensions     AsnOid(certificateExtensions_arc)
#define directoryManagement_arc 2, 5, 1, 27, 1
#define directoryManagement     AsnOid(directoryManagement_arc)
#define enhancedSecurity_arc 2, 5, 1, 28
#define enhancedSecurity     AsnOid(enhancedSecurity_arc)
//------------------------------------------------------------------------------

#endif /* conditional include of sm_x501ud.h */
